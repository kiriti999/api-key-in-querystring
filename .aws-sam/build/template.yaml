AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'APIKeyQueryString blog post.

  '
Globals:
  Function:
    Timeout: 10
  Api:
    OpenApiVersion: 3.0.1
Resources:
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AuthFunction
      Handler: app.lambda_handler
      Runtime: python3.8
    Metadata:
      SamResourceId: AuthFunction
  BackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BackendFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        health:
          Type: Api
          Properties:
            RestApiId:
              Ref: ShortFunnelApi
            Path: /health
            Method: post
        energy:
          Type: Api
          Properties:
            RestApiId:
              Ref: ShortFunnelApi
            Path: /energy
            Method: post
        testPost:
          Type: Api
          Properties:
            RestApiId:
              Ref: ShortFunnelApi
            Path: /shortfunnel-health
            Method: post
    Metadata:
      SamResourceId: BackendFunction
  ShortFunnelApi:
    DependsOn: AuthFunction
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      EndpointConfiguration:
        Type: REGIONAL
      Auth:
        DefaultAuthorizer: LambdaRequestAuthorizer
        ApiKeyRequired: true
        Authorizers:
          LambdaRequestAuthorizer:
            FunctionPayloadType: REQUEST
            FunctionArn:
              Fn::GetAtt:
              - AuthFunction
              - Arn
            Identity:
              ReauthorizeEvery: 300
              QueryStrings:
              - apiKey
      DefinitionBody:
        openapi: '3.0'
        info:
          version: '2021-08-10T13:18:57Z'
          title: ShortFunnel
        basePath: /dev
        x-amazon-apigateway-api-key-source: AUTHORIZER
        schemes:
        - https
        paths:
          /shortfunnel/health:
            post:
              produces:
              - application/json
              parameters:
              - in: query
                name: apiKey
                schema:
                  type: string
                required: true
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/shortFunnelHealthEnergy'
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/components/schemas/responses/200'
                '400':
                  description: 400 response
                  schema:
                    $ref: '#/components/schemas/responses/400'
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendFunction.Arn}/invocations
                responses:
                  default:
                    statusCode: '200'
                passthroughBehavior: when_no_match
                contentHandling: CONVERT_TO_TEXT
          /shortfunnel/energy:
            post:
              produces:
              - application/json
              parameters:
              - in: query
                name: apiKey
                schema:
                  type: string
                required: true
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/shortFunnelHealthEnergy'
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/components/schemas/responses/200'
                '400':
                  description: 400 response
                  schema:
                    $ref: '#/components/schemas/responses/400'
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendFunction.Arn}/invocations
                responses:
                  default:
                    statusCode: '200'
                passthroughBehavior: when_no_match
                contentHandling: CONVERT_TO_TEXT
          /shortfunnel-health:
            post:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/components/schemas/definitions/Empty'
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendFunction.Arn}/invocations
                responses:
                  default:
                    statusCode: '200'
                passthroughBehavior: when_no_match
                contentHandling: CONVERT_TO_TEXT
        components:
          schemas:
            definitions:
              Empty:
                type: object
                title: Empty Schema
            shortFunnelHealthEnergy:
              type: object
              additionalProperties: false
              required:
              - firstName
              - lastName
              - email
              - postCode
              - mobileNumber
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                mobileNumber:
                  type: string
                postCode:
                  type: string
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        status:
                          type: string
                          example: '200'
                        title:
                          type: string
                          example: Success
                        detail:
                          type: string
                          example: Able to access resource
              '400':
                description: success
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        status:
                          type: string
                          example: '400'
                        title:
                          type: string
                          example: Bad request
                        detail:
                          type: string
                          example: Invalid request
  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: ShortFunnelApidevStage
    Properties:
      Name:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - -apikey
      Enabled: true
      StageKeys:
      - RestApiId:
          Ref: ShortFunnelApi
        StageName: dev
      Value:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - -unbounce-key
  UsagePlan:
    DependsOn: ShortFunnelApidevStage
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
      - ApiId:
          Ref: ShortFunnelApi
        Stage: dev
      Throttle:
        BurstLimit: 50
        RateLimit: 100
      UsagePlanName: MyUsagePlan
  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId:
        Ref: ApiKey
      KeyType: API_KEY
      UsagePlanId:
        Ref: UsagePlan
Outputs:
  ShortFunnelApiHealth:
    Description: API Gateway endpoint URL for dev stage for api key validation in
      query string
    Value:
      Fn::Sub: https://${ShortFunnelApi}.execute-api.${AWS::Region}.amazonaws.com/dev/shortfunnel/health?apiKey=${AWS::StackName}-unbounce-key
  ShortFunnelApiEnergy:
    Description: API Gateway endpoint URL for dev stage for api key validation in
      query string
    Value:
      Fn::Sub: https://${ShortFunnelApi}.execute-api.${AWS::Region}.amazonaws.com/dev/shortfunnel/energy?apiKey=${AWS::StackName}-unbounce-key
  ShortFunnelAuth:
    Description: API Gateway endpoint URL for dev stage for api key validation in
      query string
    Value:
      Fn::Sub: https://${ShortFunnelApi}.execute-api.${AWS::Region}.amazonaws.com/dev/auth?apiKey=${AWS::StackName}-unbounce-key
